pipeline {
    agent any
    environment {
        GIT_URL = 'https://github.com/irfandra/livecode-cicd.git'
        BRANCH = 'main'
        IMAGE = 'livecode-cicd'
        CONTAINER = 'livecode-cicd-test-app'
        DOCKER_APP = 'docker'
        DB_HOST = 'book_management_system'
        DB_USER = 'postgres'
        DB_NAME = 'postgres'
        DB_PASSWORD = 'password'
        DB_PORT = '5432'
        API_PORT = '8000'
    }
    stages {
        stage("Cleaning up") {
            steps {
                echo 'Cleaning up'
                sh "${DOCKER_APP} rm -f ${CONTAINER} || true"
            }
        }

        stage("Clone") {
            steps {
                echo 'Clone'
                git branch: "${BRANCH}", url: "${GIT_URL}"
            }
        }

        stage("Build and Run") {
            steps {
                echo 'Build and Run'
                sh "DB_HOST=${DB_HOST} DB_PORT=${DB_PORT} DB_NAME=${DB_NAME} DB_USER=${DB_USER} DB_PASSWORD=${DB_PASSWORD} API_PORT=${API_PORT} ${DOCKER_APP} compose up -d"
            }
        }
    }
    post {
        always {
            echo 'This will always run'
        }
        success {
            script {
                def buildStatus = currentBuild.result ?: 'UNKNOWN'
                def subject = "Build ${buildStatus}: Jenkins Pipeline Notification"
                def body = "The Jenkins Pipeline has completed.\n\nBuild Status: ${buildStatus}"
                
                emailext body: body,
                         subject: subject,
                         to: 'irfanrahmanindra@gmail.com'
                
                def attachments = [
                    [
                        text: 'Congratulations! The Jenkins Pipeline succeeded.',
                        fallback: 'Success!',
                        color: '#00ff00'
                    ]
                ]
                
                slackSend(channel: "D05FAGS6ADD", attachments: attachments)
            }
        }
        
        failure {
            script {
                def buildStatus = currentBuild.result ?: 'UNKNOWN'
                def subject = "Build ${buildStatus}: Jenkins Pipeline Notification"
                def body = "The Jenkins Pipeline has failed.\n\nBuild Status: ${buildStatus}"
                
                emailext body: body,
                         subject: subject,
                         to: 'irfanrahmanindra@gmail.com'
                
                def attachments = [
                    [
                        text: 'Oops! The Jenkins Pipeline failed.',
                        fallback: 'Failure!',
                        color: '#ff0000'
                    ]
                ]
                
                slackSend(channel: "D05FAGS6ADD", attachments: attachments)
            }
        }
    }
}